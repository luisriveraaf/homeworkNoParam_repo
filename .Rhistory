knitr::opts_chunk$set(echo = TRUE)
#raffle
date <- 26012020
set.seed(date)
pablo <- sample(1:4,size = 1)
sofia <- sample(1:4,size = 1)
roman <- sample(1:4,size = 1)
knitr::opts_chunk$set(echo = TRUE)
#raffle
date <- 26012020
set.seed(date)
pablo <- sample(1:4,size = 1)
sofia <- sample(1:4,size = 1)
roman <- sample(1:4,size = 1)
data("iris3")
data("iris3")
help(iris3)
df_iris <- data("iris3")
df_iris
df_iris <- data("iris")
#libraries
library(datasets)
df_iris <- data("iris")
df_iris <- data(iris3)
df_iris <- data(iris)
summary(iris)
df_iris <- iris
View(df_iris)
View(df_iris)
df_iris <- iris3
df_iris <- iris3
df_iris
view(iris3)
View(iris3)
View(iris)
df_iris <- iris3
df_iris
head(df_iris)
head(iris3)
View(iris)
dimnames(iris3)
df_iris[1,,]
df_iris[2,,]
df_iris[3,,]
df_iris[,1,]
df_iris[,,1]
s_mn <- apply(setosa,mean)
setosa <- iris3[,,1] #1 is for Setosa
s_mn <- apply(setosa,mean)
s_mn <- apply(X = setosa,MARGIN = 2,FUN = mean)
s_mn
size(setosa)
dim(setosa)
dim(setosa)[1]
dim(setosa)[1] + 2
matrix(1:3, nrow = 3)
matrix(1:3, nrow = 6)
s_mn_matrix <- matrix(s_mn, nrow = dim_set)
#corrected mean square
dim_set <- dim(setosa)[1]
s_mn_matrix <- matrix(s_mn, nrow = dim_set)
s_mn_matrix <- matrix(rep(s_mn,each = dim_set), nrow = dim_set)
View(s_mn_matrix)
1:3 %*% 1:3
(1:3)^2
t(1:3)
setosa <- iris3[,,1] #1 is for Setosa
s_mn <- apply(X = setosa,MARGIN = 2,FUN = mean)
#corrected mean square
dim_set <- dim(setosa)[1]
s_mn_matrix <- matrix(rep(s_mn,each = dim_set), nrow = dim_set)
A <- setosa - s_mn_matrix
for(i in 1:4){
A[,i] <- A[,i] * A[,i]
}
View(A)
#unbaised sample covarianse
Sx <- (1/(dim_set -1) * A)
#eigenpar
eigen_list <- eigen(Sx)
setosa <- iris3[,,1] #1 is for Setosa
s_mn <- apply(X = setosa,MARGIN = 2,FUN = mean)
#corrected mean square
dim_set <- dim(setosa)[1]
s_mn_matrix <- matrix(rep(s_mn,each = dim_set), nrow = dim_set)
A <- setosa - s_mn_matrix
# for(i in 1:4){
#   A[,i] <- A[,i] * A[,i]
# }
A <- t(A) %*% A
#unbaised sample covarianse
Sx <- (1/(dim_set -1) * A)
#eigenpar
eigen_list <- eigen(Sx)
View(eigen_list)
View(eigen_list)
U <- eigen_list$vectors
U
L <- diag(eigen_list$values)
L
U <- eigen_list$vectors
L <- diag(eigen_list$values)
#compute Sx = ULU'
Sx_prim = U %*% L %*% t(U)
#compute UU' & U'U
UUt <- U %*% t(U)
UtU <- t(U) %*% U
UUt
library(GGally)
library(dplyr)
View(iris)
matplot_setosa <- iris %>% filter(Species = "setosa") %>% ggpairs()
matplot_setosa <- iris %>% filter(Species == "setosa") %>% ggpairs()
matplot_setosa
head(iris)
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(alpha = 0.5, col = 2)
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(mapping = aes(alpha = 0.5, col = 2))
matplot_
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(mapping = aes(col = 2))
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(col = 2)
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(col = "green")
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_setosa
matplot_setosa2 <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggscatmat()
matplot_setosa2
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_setosa2 <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggscatmat()
matplot_setosa
matplot_setosa2
matplot_all <- iris %>%
ggpairs(color = 'Species')
matplot_all <- iris %>%
ggscatmat(color = 'Species')
matplot_all
matplot_setosa
matplot_all
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_veris <- iris %>%
filter(Species == "veriscolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_light() +
labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_setosa2
matplot_all
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_veris <- iris %>%
filter(Species == "veriscolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_light() +
labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_all2 <- iris %>%
ggpairs(mapping = aes(color = 'Species')) +
theme_light() +
labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_veris
matplot_virg
matplot_all
matplot_all2
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_veris <- iris %>%
filter(Species == "versicolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_light() +
labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
#we omitted this graph because it looked very heaped
# matplot_all2 <- iris %>%
#                   ggpairs(mapping = aes(color = 'Species')) +
#                   theme_light() +
#                   labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_veris
matplot_virg
matplot_all
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(mapping = aes(color = 2))
matplot_virg
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(mapping = aes(color = "blue"))
matplot_virg
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs(color = "blue")
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_veris <- iris %>%
filter(Species == "versicolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs()
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_light() +
labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
#we omitted this graph because it looked very heaped
# matplot_all2 <- iris %>%
#                   ggpairs(mapping = aes(color = 'Species')) +
#                   theme_light() +
#                   labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_veris
matplot_virg
matplot_all
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_light()
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_minimal()
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_minimal() +
labs(title = "SETOSA", x = "", y = "")
matplot_veris <- iris %>%
filter(Species == "versicolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_minimal() +
labs(title = "VERSICOLOR", x = "", y = "")
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_minimal() +
labs(title = "VIRGINICA", x = "", y = "")
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_minimal() +
labs(title = "FLORES", x = "", y = "", color = "Especie de\n flor")
#we omitted this graph because it looked very heaped
# matplot_all2 <- iris %>%
#                   ggpairs(mapping = aes(color = 'Species')) +
#                   theme_light() +
#                   labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_veris
matplot_virg
matplot_all
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_bw() +
labs(title = "FLORES", x = "", y = "", color = "Especie de\n flor")
matplot_all
matplot_setosa
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_bw() +
labs(title = "SETOSA", x = "", y = "")
matplot_veris <- iris %>%
filter(Species == "versicolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_minimal() +
labs(title = "VERSICOLOR", x = "", y = "")
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_minimal() +
labs(title = "VIRGINICA", x = "", y = "")
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_bw() +
labs(title = "FLORES", x = "", y = "", color = "Especie de\n flor")
#we omitted this graph because it looked very heaped
# matplot_all2 <- iris %>%
#                   ggpairs(mapping = aes(color = 'Species')) +
#                   theme_light() +
#                   labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_veris
matplot_virg
matplot_all
knitr::opts_chunk$set(echo = TRUE)
#raffle
date <- 26012020
set.seed(date)
pablo <- sample(1:4,size = 1)
sofia <- sample(1:4,size = 1)
roman <- sample(1:4,size = 1)
#libraries
library(datasets)
library(GGally)
library(dplyr)
X <- iris3[,,1] #1 is for Setosa
s_mn <- apply(X = X,MARGIN = 2,FUN = mean)
#corrected mean square
dim_set <- dim(X)[1]
s_mn_matrix <- matrix(rep(s_mn,each = dim_set), nrow = dim_set)
A <- X - s_mn_matrix
# for(i in 1:4){
#   A[,i] <- A[,i] * A[,i]
# }
A <- t(A) %*% A
#unbaised sample covarianse
Sx <- (1/(dim_set -1) * A)
#eigenpar
eigen_list <- eigen(Sx)
U <- eigen_list$vectors
L <- diag(eigen_list$values)
#compute Sx = ULU'
Sx_prim = U %*% L %*% t(U)
#compute UU' & U'U
UUt <- U %*% t(U)
UtU <- t(U) %*% U
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_bw() +
labs(title = "SETOSA", x = "", y = "")
matplot_veris <- iris %>%
filter(Species == "versicolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_bw()) +
labs(title = "VERSICOLOR", x = "", y = "")
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_bw() +
labs(title = "VIRGINICA", x = "", y = "")
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_bw() +
labs(title = "FLORES", x = "", y = "", color = "Especie de\n flor")
#we omitted this graph because it looked very heaped
# matplot_all2 <- iris %>%
#                   ggpairs(mapping = aes(color = 'Species')) +
#                   theme_light() +
#                   labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_veris
matplot_virg
matplot_all
Y <- cbind(X)
knitr::opts_chunk$set(echo = TRUE)
#raffle
date <- 26012020
set.seed(date)
pablo <- sample(1:4,size = 1)
sofia <- sample(1:4,size = 1)
roman <- sample(1:4,size = 1)
#libraries
library(datasets)
library(GGally)
library(dplyr)
X <- iris3[,,1] #1 is for Setosa
s_mn <- apply(X = X,MARGIN = 2,FUN = mean)
#corrected mean square
dim_set <- dim(X)[1]
s_mn_matrix <- matrix(rep(s_mn,each = dim_set), nrow = dim_set)
A <- X - s_mn_matrix
# for(i in 1:4){
#   A[,i] <- A[,i] * A[,i]
# }
A <- t(A) %*% A
#unbaised sample covarianse
Sx <- (1/(dim_set -1) * A)
#eigenpar
eigen_list <- eigen(Sx)
U <- eigen_list$vectors
L <- diag(eigen_list$values)
#compute Sx = ULU'
Sx_prim = U %*% L %*% t(U)
#compute UU' & U'U
UUt <- U %*% t(U)
UtU <- t(U) %*% U
matplot_setosa <- iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_bw() +
labs(title = "SETOSA", x = "", y = "")
matplot_veris <- iris %>%
filter(Species == "versicolor") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_bw() +
labs(title = "VERSICOLOR", x = "", y = "")
matplot_virg <- iris %>%
filter(Species == "virginica") %>%
select(Sepal.Length, Sepal.Width, Petal.Length) %>%
ggpairs() +
theme_bw() +
labs(title = "VIRGINICA", x = "", y = "")
matplot_all <- iris %>%
ggscatmat(color = 'Species') +
theme_bw() +
labs(title = "FLORES", x = "", y = "", color = "Especie de\n flor")
#we omitted this graph because it looked very heaped
# matplot_all2 <- iris %>%
#                   ggpairs(mapping = aes(color = 'Species')) +
#                   theme_light() +
#                   labs(title = "Figura 1", x = "", y = "", color = "Especie de\n flor")
matplot_setosa
matplot_veris
matplot_virg
matplot_all
Y <- cbind(X)
X
head(X)
S['Sepal L.']
X['Sepal L.']
X[,'Sepal L.']
View(iris3)
View(Sx)
View(s_mn_matrix)
knitr::opts_chunk$set(echo = TRUE)
set.seed(1234)
n <- c(5,10,20,30,40,50,100)
long <- c()
cob <- c()
for(i in 1:length(n))
{
Xi <- rbinom(n[i], size = 1, prob = .2)
Xn <- mean(Xi)
IC <- Xn + c(-1,1)*qnorm(.975)*sqrt(Xn*(1-Xn)/n[i])
long[i] = IC[2] - IC[1]
cat("n =", n[i], " -> Longitud:", long[i])
cob[i] = pbinom(n[i]*IC[2],size = n[i], prob = .2) - pbinom(n[i]*IC[1],size = n[i], prob = .2)
cat("\t y Cobertura:", cob[i], "\n")
}
plot(n,cob, ylim=c(.65, 1), ylab = "Cobertura", main = "Tamañano de muestra vs Cobertura")
